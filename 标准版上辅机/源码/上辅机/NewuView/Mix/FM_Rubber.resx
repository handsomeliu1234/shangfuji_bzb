<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelRubberWeight.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="labelScaleReal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>