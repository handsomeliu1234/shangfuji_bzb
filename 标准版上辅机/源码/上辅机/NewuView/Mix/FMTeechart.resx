<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axTChart1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA9wYAAAIB
        AAAAAQAAAAAAAAAAAAAAAOIGAABUUEYwC1RDaGFydENoYXJ0AARMZWZ0Ah8DVG9wAgwFV2lkdGgDjAIG
        SGVpZ2h0A5MBDkJhY2tXYWxsLkNvbG9yAv8QQm90dG9tV2FsbC5Db2xvcgcIY2xTaWx2ZXISVGl0bGUu
        VGV4dC5TdHJpbmdzAQYIVGVlQ2hhcnQAE0RlcHRoQXhpcy5BdXRvbWF0aWMIGkRlcHRoQXhpcy5BdXRv
        bWF0aWNNYXhpbXVtCBpEZXB0aEF4aXMuQXV0b21hdGljTWluaW11bQgRRGVwdGhBeGlzLk1heGltdW0F
        AAAAAAAAAID+vxFEZXB0aEF4aXMuTWluaW11bQUAAAAAAAAAgP6/FkRlcHRoVG9wQXhpcy5BdXRvbWF0
        aWMIHURlcHRoVG9wQXhpcy5BdXRvbWF0aWNNYXhpbXVtCB1EZXB0aFRvcEF4aXMuQXV0b21hdGljTWlu
        aW11bQgURGVwdGhUb3BBeGlzLk1heGltdW0FAAAAAAAAAID+vxREZXB0aFRvcEF4aXMuTWluaW11bQUA
        AAAAAAAAgP6/EkxlZnRBeGlzLkF1dG9tYXRpYwgZTGVmdEF4aXMuQXV0b21hdGljTWluaW11bQgOTGVn
        ZW5kLlZpc2libGUIE1JpZ2h0QXhpcy5BdXRvbWF0aWMIGlJpZ2h0QXhpcy5BdXRvbWF0aWNNYXhpbXVt
        CBpSaWdodEF4aXMuQXV0b21hdGljTWluaW11bQgRUmlnaHRBeGlzLk1heGltdW0FAAAAAAAAAJYHQAVD
        b2xvcgcIY2xTaWx2ZXIMUHJpbnRNYXJnaW5zAQIPAiMCDwIjAAALVExpbmVTZXJpZXMHU2VyaWVzMBNN
        YXJrcy5BcnJvdy5WaXNpYmxlCRlNYXJrcy5DYWxsb3V0LkJydXNoLkNvbG9yBwdjbEJsYWNrG01hcmtz
        LkNhbGxvdXQuQXJyb3cuVmlzaWJsZQkNTWFya3MuVmlzaWJsZQgNTGluZVBlbi5Db2xvcgcFY2xSZWQW
        UG9pbnRlci5JbmZsYXRlTWFyZ2lucwkNUG9pbnRlci5TdHlsZQcLcHNSZWN0YW5nbGUPUG9pbnRlci5W
        aXNpYmxlCApUcmVhdE51bGxzBwh0bklnbm9yZQxYVmFsdWVzLk5hbWUGAVgNWFZhbHVlcy5PcmRlcgcL
        bG9Bc2NlbmRpbmcMWVZhbHVlcy5OYW1lBgFZDVlWYWx1ZXMuT3JkZXIHBmxvTm9uZQAAC1RMaW5lU2Vy
        aWVzB1NlcmllczETTWFya3MuQXJyb3cuVmlzaWJsZQkZTWFya3MuQ2FsbG91dC5CcnVzaC5Db2xvcgcH
        Y2xCbGFjaxtNYXJrcy5DYWxsb3V0LkFycm93LlZpc2libGUJDU1hcmtzLlZpc2libGUICFZlcnRBeGlz
        BwphUmlnaHRBeGlzFlBvaW50ZXIuSW5mbGF0ZU1hcmdpbnMJDVBvaW50ZXIuU3R5bGUHC3BzUmVjdGFu
        Z2xlD1BvaW50ZXIuVmlzaWJsZQgMWFZhbHVlcy5OYW1lBgFYDVhWYWx1ZXMuT3JkZXIHC2xvQXNjZW5k
        aW5nDFlWYWx1ZXMuTmFtZQYBWQ1ZVmFsdWVzLk9yZGVyBwZsb05vbmUAAA9URmFzdExpbmVTZXJpZXMH
        U2VyaWVzMhNNYXJrcy5BcnJvdy5WaXNpYmxlCRlNYXJrcy5DYWxsb3V0LkJydXNoLkNvbG9yBwdjbEJs
        YWNrG01hcmtzLkNhbGxvdXQuQXJyb3cuVmlzaWJsZQkNTWFya3MuVmlzaWJsZQgLU2VyaWVzQ29sb3IH
        BmNsQmx1ZQ1MaW5lUGVuLkNvbG9yBwZjbEJsdWUMWFZhbHVlcy5OYW1lBgFYDVhWYWx1ZXMuT3JkZXIH
        C2xvQXNjZW5kaW5nDFlWYWx1ZXMuTmFtZQYBWQ1ZVmFsdWVzLk9yZGVyBwZsb05vbmUAAAxUUGFnZU51
        bVRvb2wKQ2hhcnRUb29sMAZBY3RpdmUIE0NhbGxvdXQuQnJ1c2guQ29sb3IHB2NsQmxhY2sVQ2FsbG91
        dC5BcnJvdy5WaXNpYmxlCApTaGFwZS5UZXh0BgtQYWdlIDEgb2YgMQRUZXh0BgtQYWdlIDEgb2YgMRdE
        aXNhYmxlZEJ1dHRvbi5FbmRDb2xvcgcIY2xTaWx2ZXIWRGlzYWJsZWRCdXR0b24uVmlzaWJsZQkWRW5h
        YmxlZEJ1dHRvbi5FbmRDb2xvcgcIY2xTaWx2ZXIYRW5hYmxlZEJ1dHRvbi5TdGFydENvbG9yBwdjbEJs
        YWNrFUVuYWJsZWRCdXR0b24uVmlzaWJsZQkAAAAAAAAAAgAAAAD/////Cw==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>